[{"name":"app.R","content":"\r\n# Laundromat Investment Analysis Shiny App\r\n# Author: AI Assistant\r\n# Date: 2025-06-12\r\n\r\n# Load required libraries\r\nlibrary(shiny)\r\nlibrary(shinydashboard)\r\nlibrary(shinyauthr)\r\nlibrary(DT)\r\nlibrary(plotly)\r\nlibrary(dplyr)\r\nlibrary(readr)\r\nlibrary(FinCal)\r\nlibrary(scales)\r\nlibrary(shinyWidgets)\r\n\r\n# Authentication setup - simple password protection\r\nuser_base <- data.frame(\r\n  user = \"mcf\",\r\n  password = \"Ayala420!\",  # Simple password as requested\r\n  stringsAsFactors = FALSE\r\n)\r\n\r\n# Define UI\r\nui <- dashboardPage(\r\n  dashboardHeader(title = \"MCF Expansion\"),\r\n\r\n  dashboardSidebar(\r\n    # Password input for simple authentication\r\n    conditionalPanel(\r\n      condition = \"output.authenticated == false\",\r\n      tags$div(\r\n        style = \"padding: 20px;\",\r\n        h3(\"Authentication Required\"),\r\n        textInput(\"username\", \"Username:\", value = \"\"),\r\n        passwordInput(\"password\", \"Password:\", value = \"\"),\r\n        actionButton(\"loginBtn\", \"Login\", class = \"btn-primary\"),\r\n        br(), br()\r\n      )\r\n    ),\r\n\r\n    # Main navigation menu (only shown when authenticated)\r\n    conditionalPanel(\r\n      condition = \"output.authenticated == true\",\r\n      sidebarMenu(\r\n        menuItem(\"Investment Analysis\", tabName = \"analysis\", icon = icon(\"calculator\"))\r\n      )\r\n    )\r\n  ),\r\n\r\n  dashboardBody(\r\n    # Authentication status output\r\n    verbatimTextOutput(\"auth_status\", placeholder = TRUE),\r\n\r\n    # Main content (only shown when authenticated)\r\n    conditionalPanel(\r\n      condition = \"output.authenticated == true\",\r\n\r\n      tabItems(\r\n        # Investment Analysis Tab\r\n        tabItem(tabName = \"analysis\",\r\n          fluidRow(\r\n            box(\r\n              title = \"Investment Parameters\", status = \"primary\", solidHeader = TRUE, width = 6,\r\n\r\n              # Purchase Price Slider\r\n              sliderInput(\"purchase_price\",\r\n                         \"Purchase Price (€):\",\r\n                         min = 10000, max = 200000, value = 60000, step = 1000,\r\n                         pre = \"€\", sep = \",\"),\r\n\r\n              # Expected Annual Sales\r\n              numericInput(\"annual_sales\",\r\n                          \"(A+B) Expected Annual Sales (€):\",\r\n                          value = 50000, min = 25000, max = 200000, step = 1000),\r\n\r\n              # Down Payment Percentage\r\n              sliderInput(\"down_payment_pct\",\r\n                         \"Down Payment (%):\",\r\n                         min = 10, max = 100, value = 30, step = 5, post = \"%\"),\r\n\r\n              # Interest Rate\r\n              sliderInput(\"interest_rate\",\r\n                         \"Loan Interest Rate (%):\",\r\n                         min = 0, max = 20, value = 6, step = 0.05, post = \"%\"),\r\n\r\n              # Loan Term\r\n              sliderInput(\"loan_term\",\r\n                         \"Loan Term (years):\",\r\n                         min = 1, max = 25, value = 5, step = 1),\r\n\r\n              h3(\"Include tax impact?\"),\r\n              shinyWidgets::switchInput(\r\n                inputId = \"tax_toggle\",\r\n                label = \"Yes\",\r\n                value = FALSE\r\n              )\r\n            ),\r\n\r\n            box(\r\n              title = \"Operating Costs\", status = \"primary\", solidHeader = TRUE, width = 6,\r\n\r\n              # Rent\r\n              sliderInput(\"monthly_rent\",\r\n                         \"(C) Monthly Rent (€):\",\r\n                         min = 300, max = 3000, value = 800, step = 20,\r\n                         pre = \"€\", sep = \",\"),\r\n\r\n              # Utilities var\r\n              sliderInput(\"monthly_utilities\",\r\n                         \"(E+F) Monthly Variable (€):\",\r\n                         min = 100, max = 3000, value = 1000, step = 50,\r\n                         pre = \"€\", sep = \",\"),\r\n\r\n              # fixed costs\r\n              sliderInput(\"monthly_fixed\",\r\n                          \"(G+H) Monthly Fixed Costs (€):\",\r\n                          min = 100, max = 3000, value = 1000, step = 50,\r\n                          pre = \"€\", sep = \",\"),\r\n\r\n              # Maintenance\r\n              sliderInput(\"annual_maintenance\",\r\n                         \"(I) Annual Maintenance (€):\",\r\n                         min = 0, max = 30000, value = 2500, step = 200,\r\n                         pre = \"€\", sep = \",\"),\r\n\r\n              # corp overhead\r\n              sliderInput(\"annual_corp\",\r\n                          \"(J) Annual Corp Costs (€):\",\r\n                          min = 0, max = 5000, value = 100, step = 50,\r\n                          pre = \"€\", sep = \",\"),\r\n\r\n              # Equipment Depreciation\r\n              sliderInput(\"annual_depreciation\",\r\n                         \"(O) Annual Equipment Depreciation (€):\",\r\n                         min = 0, max = 30000, value = 3000, step = 500,\r\n                         pre = \"€\", sep = \",\")\r\n            )\r\n          ),\r\n\r\n          fluidRow(\r\n            box(\r\n              title = \"Analysis Assumptions\", status = \"primary\", solidHeader = TRUE, width = 12,\r\n\r\n              sliderInput(\"discount_rate\",\r\n                         \"Discount Rate for NPV (%):\",\r\n                         min = 1, max = 15, value = 5, step = 0.5, post = \"%\"),\r\n\r\n              sliderInput(\"analysis_period\",\r\n                         \"Analysis Period (years):\",\r\n                         min = 2, max = 20, value = 5, step = 1),\r\n\r\n              sliderInput(\"terminal_value\",\r\n                          \"Valor terminal:\",\r\n                          min = 0, max = 250000, value = 10000, step = 1000)\r\n            ),\r\n              box(title = \"Analyze\", status = \"primary\", solidHeader = TRUE, width = 12,\r\n              actionButton(\"calculate\", \"Calculate Investment Metrics\",\r\n                          class = \"btn-success\", style = \"margin-top: 10px;\")\r\n            )\r\n          ),\r\n\r\n          fluidRow(\r\n            box(\r\n              title = \"Investment Metrics\", status = \"warning\", solidHeader = TRUE, width = 6,\r\n              DT::dataTableOutput(\"metrics_table\")\r\n            ),\r\n\r\n            box(\r\n              title = \"Cash Flow Analysis\", status = \"warning\", solidHeader = TRUE, width = 6,\r\n              plotlyOutput(\"cashflow_plot\")\r\n            )\r\n          ),\r\n\r\n          fluidRow(\r\n            box(\r\n              title = \"Key Assumptions Used\", status = \"warning\", solidHeader = TRUE, width = 12,\r\n              verbatimTextOutput(\"assumptions_summary\")\r\n            )\r\n          )\r\n\r\n        )\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n# Define Server\r\nserver <- function(input, output, session) {\r\n\r\n  # Authentication logic\r\n  values <- reactiveValues(authenticated = FALSE)\r\n\r\n  # Check authentication status\r\n  output$authenticated <- reactive({\r\n    return(values$authenticated)\r\n  })\r\n  outputOptions(output, \"authenticated\", suspendWhenHidden = FALSE)\r\n\r\n  # Login logic\r\n  observeEvent(input$loginBtn, {\r\n    if (input$username == user_base$user && input$password == user_base$password) {\r\n      values$authenticated <- TRUE\r\n      showNotification(\"Login successful!\", type = \"message\")\r\n    } else {\r\n      showNotification(\"Invalid username or password!\", type = \"error\")\r\n    }\r\n  })\r\n\r\n  # Auth status display\r\n  output$auth_status <- renderText({\r\n    if (values$authenticated) {\r\n      return(paste0(\"Logged in: \",Sys.time() ))\r\n    } else {\r\n      return(\"\")\r\n    }\r\n  })\r\n\r\n\r\n\r\n  output$pl_preview <- DT::renderDataTable({\r\n    req(pl_data())\r\n    DT::datatable(head(pl_data(), 100), options = list(scrollX = TRUE))\r\n  })\r\n\r\n  # Calculate investment metrics\r\n  investment_results <- eventReactive(input$calculate, {\r\n\r\n    # Extract inputs\r\n    purchase_price <- input$purchase_price\r\n    annual_sales <- input$annual_sales\r\n    down_payment <- purchase_price * (input$down_payment_pct / 100)\r\n    loan_amount <- purchase_price - down_payment\r\n    interest_rate <- input$interest_rate / 100\r\n    loan_term <- input$loan_term\r\n    discount_rate <- input$discount_rate / 100\r\n    analysis_period <- input$analysis_period\r\n\r\n    # Calculate annual operating costs\r\n    annual_rent <- input$monthly_rent * 12\r\n    annual_utilities <- input$monthly_utilities * 12\r\n    annual_maintenance <- input$annual_maintenance\r\n    annual_fixed <- input$monthly_fixed * 12\r\n    annual_depreciation <- input$annual_depreciation\r\n    annual_corp <- input$annual_corp\r\n    terminal_value_input <- input$terminal_value\r\n\r\n    total_annual_costs <- annual_rent + annual_utilities + annual_maintenance +\r\n                         annual_fixed + annual_depreciation + annual_corp\r\n\r\n    # Calculate monthly loan payment\r\n    if (loan_amount > 0) {\r\n      monthly_rate <- interest_rate / 12\r\n      num_payments <- loan_term * 12\r\n      monthly_payment <- loan_amount * (monthly_rate * (1 + monthly_rate)^num_payments) /\r\n                        ((1 + monthly_rate)^num_payments - 1)\r\n      annual_debt_service <- monthly_payment * 12\r\n    } else {\r\n      monthly_payment <- 0\r\n      annual_debt_service <- 0\r\n    }\r\n\r\n    # Calculate annual cash flows\r\n    irpf_tax <- (annual_sales*(1-0.21) - total_annual_costs*(1-0.21))*0.25\r\n    iva_net <- (annual_sales*(0.21) - (total_annual_costs-annual_depreciation)*(0.21))\r\n\r\n    annual_net_income <- annual_sales - total_annual_costs - ifelse(input$tax_toggle, iva_net+irpf_tax, 0)\r\n    annual_cash_flow <- annual_net_income - annual_debt_service\r\n\r\n    # Create cash flow vector for NPV and IRR calculations\r\n    cash_flows <- c(-down_payment)  # Initial investment (negative)\r\n\r\n    for (i in 1:analysis_period) {\r\n      cash_flows <- c(cash_flows, annual_cash_flow)\r\n    }\r\n\r\n    # Add terminal value (simplified as remaining loan balance reduction)\r\n    if (loan_term > analysis_period) {\r\n      remaining_balance <- loan_amount * ((1 + monthly_rate)^(num_payments) - (1 + monthly_rate)^(analysis_period * 12)) /\r\n                          ((1 + monthly_rate)^(num_payments) - 1)\r\n      terminal_value <- terminal_value_input - remaining_balance\r\n    } else {\r\n      terminal_value <- terminal_value_input\r\n    }\r\n\r\n    cash_flows[length(cash_flows)] <- cash_flows[length(cash_flows)] + terminal_value\r\n\r\n    # Calculate NPV\r\n    npv <- sum(cash_flows / (1 + discount_rate)^(0:(length(cash_flows)-1)))\r\n\r\n    # Calculate IRR (using iterative method)\r\n    irr_calc <- function(rate) {\r\n      sum(cash_flows / (1 + rate)^(0:(length(cash_flows)-1)))\r\n    }\r\n\r\n    # Find IRR using optimization\r\n    irr_result <- tryCatch({\r\n      uniroot(irr_calc, interval = c(-0.99, 5))$root\r\n    }, error = function(e) {\r\n      NA\r\n    })\r\n\r\n    # Calculate other metrics\r\n    total_cash_invested <- down_payment\r\n    annual_return <- annual_cash_flow\r\n    cash_on_cash_return <- ifelse(total_cash_invested > 0, annual_return / total_cash_invested, 0)\r\n\r\n    # Payback period\r\n    cumulative_cash_flow <- cumsum(cash_flows)\r\n    payback_period <- ifelse(any(cumulative_cash_flow >= down_payment),\r\n                            which(cumulative_cash_flow >= down_payment)[1],\r\n                            NA)\r\n\r\n    # ROI calculation\r\n    total_profit <- sum(cash_flows[-1])  # Exclude initial investment\r\n    roi <- ifelse(down_payment > 0, (total_profit / down_payment) * 100, 0)\r\n\r\n    # Create results\r\n    results <- list(\r\n      npv = npv,\r\n      irr = ifelse(is.na(irr_result), \"Unable to calculate\", paste0(round(irr_result * 100, 2), \"%\")),\r\n      cash_on_cash = paste0(round(cash_on_cash_return * 100, 2), \"%\"),\r\n      payback_period = ifelse(is.na(payback_period), \"Never\", paste(payback_period, \"years\")),\r\n      roi = paste0(round(roi, 2), \"%\"),\r\n      annual_cash_flow = annual_cash_flow,\r\n      annual_net_income = annual_net_income,\r\n      debt_service = annual_debt_service,\r\n      cash_flows = cash_flows,\r\n      assumptions = list(\r\n        purchase_price = purchase_price,\r\n        down_payment = down_payment,\r\n        loan_amount = loan_amount,\r\n        interest_rate = paste0(round(interest_rate * 100, 2), \"%\"),\r\n        loan_term = paste(loan_term, \"years\"),\r\n        discount_rate = paste0(round(discount_rate * 100, 2), \"%\"),\r\n        analysis_period = paste(analysis_period, \"years\"),\r\n        annual_sales = annual_sales,\r\n        total_annual_costs = total_annual_costs,\r\n        annual_rent = annual_rent,\r\n        annual_utilities = annual_utilities,\r\n        annual_maintenance = annual_maintenance,\r\n        annual_fixed = annual_fixed,\r\n        annual_corp = annual_corp,\r\n        annual_depreciation = annual_depreciation,\r\n        terminal_value = terminal_value_input\r\n      )\r\n    )\r\n\r\n    return(results)\r\n  })\r\n\r\n  # Render metrics table\r\n  output$metrics_table <- DT::renderDataTable({\r\n    req(investment_results())\r\n\r\n    results <- investment_results()\r\n\r\n    metrics_df <- data.frame(\r\n      Metric = c(\"Net Present Value (NPV)\",\r\n                 \"Internal Rate of Return (IRR)\",\r\n                 \"Cash-on-Cash Return\",\r\n                 \"Payback Period\",\r\n                 \"Return on Investment (ROI)\",\r\n                 \"Annual Cash Flow\",\r\n                 \"Annual Net Income\",\r\n                 \"Annual Debt Service\"),\r\n      Value = c(paste0(\"€\", format(round(results$npv), big.mark = \",\")),\r\n                results$irr,\r\n                results$cash_on_cash,\r\n                results$payback_period,\r\n                results$roi,\r\n                paste0(\"€\", format(round(results$annual_cash_flow), big.mark = \",\")),\r\n                paste0(\"€\", format(round(results$annual_net_income), big.mark = \",\")),\r\n                paste0(\"€\", format(round(results$debt_service), big.mark = \",\"))),\r\n      stringsAsFactors = FALSE\r\n    )\r\n\r\n    DT::datatable(metrics_df, options = list(dom = 't', pageLength = -1), rownames = FALSE)\r\n  })\r\n\r\n  # Render cash flow plot\r\n  output$cashflow_plot <- renderPlotly({\r\n    req(investment_results())\r\n\r\n    results <- investment_results()\r\n    years <- 0:(length(results$cash_flows) - 1)\r\n\r\n    plot_data <- data.frame(\r\n      Year = years,\r\n      Cash_Flow = results$cash_flows\r\n    )\r\n\r\n    p <- plot_ly(plot_data, x = ~Year, y = ~Cash_Flow, type = 'bar',\r\n                 marker = list(color = ifelse(plot_data$Cash_Flow >= 0, 'green', 'red'))) %>%\r\n      layout(title = \"Projected Cash Flows by Year\",\r\n             xaxis = list(title = \"Year\"),\r\n             yaxis = list(title = \"Cash Flow (€)\"),\r\n             hovermode = 'x')\r\n\r\n    return(p)\r\n  })\r\n\r\n  # Render assumptions summary\r\n  output$assumptions_summary <- renderText({\r\n    req(investment_results())\r\n\r\n    assumptions <- investment_results()$assumptions\r\n\r\n    paste(\r\n      \"INVESTMENT ASSUMPTIONS USED IN ANALYSIS:\",\r\n      \"=========================================\",\r\n      \"\",\r\n      \"=== PURCHASE DETAILS:\",\r\n      paste(\"• Purchase Price:\", format(assumptions$purchase_price, big.mark = \",\"), \"€\"),\r\n      paste(\"• Down Payment:\", format(assumptions$down_payment, big.mark = \",\"), \"€\"),\r\n      paste(\"• Loan Amount:\", format(assumptions$loan_amount, big.mark = \",\"), \"€\"),\r\n      paste(\"• Interest Rate:\", assumptions$interest_rate),\r\n      paste(\"• Loan Term:\", assumptions$loan_term),\r\n      \"\",\r\n      \"=== REVENUE & COSTS:\",\r\n      paste(\"• Expected Annual Sales:\", format(assumptions$annual_sales, big.mark = \",\"), \"€\"),\r\n      paste(\"• Total Annual Operating Costs:\", format(assumptions$total_annual_costs, big.mark = \",\"), \"€\"),\r\n      paste(\"  - Annual Rent:\", format(assumptions$annual_rent, big.mark = \",\"), paste0(\"€ (\", format(round(assumptions$annual_rent/assumptions$annual_sales*100,1), big.mark = \",\"), \"%)\")),\r\n      paste(\"  - Annual Utilities Variable:\", format(assumptions$annual_utilities, big.mark = \",\"), paste0(\"€ (\", format(round(assumptions$annual_utilities/assumptions$annual_sales*100,1), big.mark = \",\"), \"%)\")),\r\n      paste(\"  - Annual Maintenance:\", format(assumptions$annual_maintenance, big.mark = \",\"), paste0(\"€ (\", format(round(assumptions$annual_maintenance/assumptions$annual_sales*100,1), big.mark = \",\"), \"%)\")),\r\n      paste(\"  - Annual Fixed:\", format(assumptions$annual_fixed, big.mark = \",\"), paste0(\"€ (\", format(round(assumptions$annual_fixed/assumptions$annual_sales*100,1), big.mark = \",\"), \"%)\")),\r\n      paste(\"  - Annual Corp Costs:\", format(assumptions$annual_corp, big.mark = \",\"), paste0(\"€ (\", format(round(assumptions$annual_corp/assumptions$annual_sales*100,1), big.mark = \",\"), \"%)\")),\r\n      paste(\"  - Annual Depreciation:\", format(assumptions$annual_depreciation, big.mark = \",\"), paste0(\"€ (\", format(round(assumptions$annual_depreciation/assumptions$annual_sales*100,1), big.mark = \",\"), \"%)\")),\r\n      \"\",\r\n      \"=== MARGINS:\",\r\n      paste0(\"EBITDA \",format((1-(assumptions$total_annual_costs-assumptions$annual_depreciation)/assumptions$annual_sales)*100,\r\n                                    big.mark = \".\",digits=1,nsmall=1), \"%\"),\r\n      paste0(\"Net Income \",format((1-(assumptions$total_annual_costs)/assumptions$annual_sales)*100,\r\n                              big.mark = \".\",digits=1,nsmall=1), \"%\"),\r\n      \"\",\r\n      \"=== ANALYSIS PARAMETERS:\",\r\n      paste(\"• Discount Rate (NPV):\", assumptions$discount_rate),\r\n      paste(\"• Analysis Period:\", assumptions$analysis_period),\r\n      paste(\"• Taxes:\", ifelse(input$tax_toggle,\" yes\", \" no\" )),\r\n      paste(\"• Terminal Value\", paste0(format(assumptions$terminal_value,big.mark = \",\"), \"€\" )),\r\n      \"\",\r\n      \"Note: This analysis assumes consistent annual performance and does not account for\",\r\n      \"inflation, market changes, or unexpected events. Results should be used as a guide\",\r\n      \"alongside professional financial advice.\",\r\n      sep = \"\r\n      \"\r\n    )\r\n  })\r\n}\r\n\r\n# Run the application\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
